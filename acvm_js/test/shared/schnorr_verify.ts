// let public_key_x = FunctionInput { witness: Witness(1), num_bits: FieldElement:: max_num_bits() };
// let public_key_y = FunctionInput { witness: Witness(2), num_bits: FieldElement:: max_num_bits() };
// let signature =
//   (3..(3 + 64)).map(| i | FunctionInput { witness: Witness(i), num_bits: 8 }).collect();
// let message = ((3 + 64)..(3 + 64 + 10))
//   .map(| i | FunctionInput { witness: Witness(i), num_bits: 8 })
//   .collect();
// let output = Witness(3 + 64 + 10);

// let schnorr = Opcode:: BlackBoxFuncCall(BlackBoxFuncCall:: SchnorrVerify {
//   public_key_x,
//   public_key_y,
//   signature,
//   message,
//   output,
// });

// let circuit = Circuit {
//   current_witness_index: 100,
//   opcodes: vec![schnorr],
//     public_parameters: PublicInputs::default(),
//     return_values: PublicInputs(BTreeSet::from_iter(vec![output])),
// };
export const bytecode = Uint8Array.from([
  5, 128, 71, 74, 3, 1, 0, 0, 237, 142, 189, 247, 222, 123, 239, 61, 38, 26,
  107, 78, 130, 247, 176, 42, 138, 75, 2, 11, 130, 30, 243, 3, 51, 232, 197, 63,
  8, 62, 36, 79, 240, 45, 33, 124, 61, 228, 115, 127, 241, 48, 29, 188, 198,
  179, 239, 201, 183, 76, 144, 72, 135, 97, 238, 247, 46, 120, 206, 100, 163,
  232, 254, 49, 122, 121, 250, 248, 182, 188, 80, 180, 162, 80, 252, 47, 139,
  89, 137, 85, 88, 141, 53, 88, 139, 96, 29, 214, 99, 3, 54, 98, 19, 54, 99, 11,
  182, 98, 27, 182, 99, 7, 118, 98, 23, 118, 99, 15, 246, 98, 31, 246, 227, 0,
  14, 226, 16, 14, 227, 8, 142, 226, 24, 142, 227, 4, 78, 226, 20, 78, 227, 12,
  206, 226, 28, 206, 227, 2, 46, 226, 18, 46, 227, 10, 174, 226, 26, 174, 227,
  6, 110, 226, 22, 110, 227, 14, 238, 226, 30, 238, 227, 1, 30, 226, 17, 30,
  227, 9, 198, 240, 20, 227, 252, 152, 192, 51, 60, 199, 36, 94, 224, 37, 94,
  225, 53, 222, 224, 45, 169, 207, 124, 170, 4,
]);

export const initialWitnessMap = new Map([
  [1, "0x17cbd3ed3151ccfd170efe1d54280a6a4822640bf5c369908ad74ea21518a9c5"],
  [2, "0x0e0456e3795c1a31f20035b741cd6158929eeccd320d299cfcac962865a6bc74"],
  [3, "0x0000000000000000000000000000000000000000000000000000000000000005"],
  [4, "0x00000000000000000000000000000000000000000000000000000000000000ca"],
  [5, "0x000000000000000000000000000000000000000000000000000000000000001f"],
  [6, "0x0000000000000000000000000000000000000000000000000000000000000092"],
  [7, "0x0000000000000000000000000000000000000000000000000000000000000051"],
  [8, "0x00000000000000000000000000000000000000000000000000000000000000f2"],
  [9, "0x00000000000000000000000000000000000000000000000000000000000000f6"],
  [10, "0x0000000000000000000000000000000000000000000000000000000000000045"],
  [11, "0x000000000000000000000000000000000000000000000000000000000000002b"],
  [12, "0x000000000000000000000000000000000000000000000000000000000000006b"],
  [13, "0x00000000000000000000000000000000000000000000000000000000000000f9"],
  [14, "0x0000000000000000000000000000000000000000000000000000000000000099"],
  [15, "0x00000000000000000000000000000000000000000000000000000000000000c6"],
  [16, "0x000000000000000000000000000000000000000000000000000000000000002c"],
  [17, "0x000000000000000000000000000000000000000000000000000000000000000e"],
  [18, "0x000000000000000000000000000000000000000000000000000000000000006f"],
  [19, "0x00000000000000000000000000000000000000000000000000000000000000bf"],
  [20, "0x0000000000000000000000000000000000000000000000000000000000000079"],
  [21, "0x0000000000000000000000000000000000000000000000000000000000000089"],
  [22, "0x00000000000000000000000000000000000000000000000000000000000000a6"],
  [23, "0x00000000000000000000000000000000000000000000000000000000000000a0"],
  [24, "0x0000000000000000000000000000000000000000000000000000000000000067"],
  [25, "0x0000000000000000000000000000000000000000000000000000000000000012"],
  [26, "0x00000000000000000000000000000000000000000000000000000000000000b5"],
  [27, "0x00000000000000000000000000000000000000000000000000000000000000f3"],
  [28, "0x00000000000000000000000000000000000000000000000000000000000000e9"],
  [29, "0x00000000000000000000000000000000000000000000000000000000000000e2"],
  [30, "0x000000000000000000000000000000000000000000000000000000000000005f"],
  [31, "0x0000000000000000000000000000000000000000000000000000000000000043"],
  [32, "0x0000000000000000000000000000000000000000000000000000000000000010"],
  [33, "0x0000000000000000000000000000000000000000000000000000000000000025"],
  [34, "0x0000000000000000000000000000000000000000000000000000000000000080"],
  [35, "0x0000000000000000000000000000000000000000000000000000000000000055"],
  [36, "0x000000000000000000000000000000000000000000000000000000000000004c"],
  [37, "0x0000000000000000000000000000000000000000000000000000000000000013"],
  [38, "0x00000000000000000000000000000000000000000000000000000000000000fd"],
  [39, "0x000000000000000000000000000000000000000000000000000000000000001e"],
  [40, "0x000000000000000000000000000000000000000000000000000000000000004d"],
  [41, "0x00000000000000000000000000000000000000000000000000000000000000c0"],
  [42, "0x0000000000000000000000000000000000000000000000000000000000000035"],
  [43, "0x000000000000000000000000000000000000000000000000000000000000008a"],
  [44, "0x00000000000000000000000000000000000000000000000000000000000000cd"],
  [45, "0x0000000000000000000000000000000000000000000000000000000000000045"],
  [46, "0x0000000000000000000000000000000000000000000000000000000000000021"],
  [47, "0x00000000000000000000000000000000000000000000000000000000000000ec"],
  [48, "0x00000000000000000000000000000000000000000000000000000000000000a3"],
  [49, "0x0000000000000000000000000000000000000000000000000000000000000053"],
  [50, "0x00000000000000000000000000000000000000000000000000000000000000c2"],
  [51, "0x0000000000000000000000000000000000000000000000000000000000000054"],
  [52, "0x0000000000000000000000000000000000000000000000000000000000000089"],
  [53, "0x00000000000000000000000000000000000000000000000000000000000000b8"],
  [54, "0x00000000000000000000000000000000000000000000000000000000000000dd"],
  [55, "0x00000000000000000000000000000000000000000000000000000000000000b0"],
  [56, "0x0000000000000000000000000000000000000000000000000000000000000079"],
  [57, "0x00000000000000000000000000000000000000000000000000000000000000b3"],
  [58, "0x000000000000000000000000000000000000000000000000000000000000001b"],
  [59, "0x000000000000000000000000000000000000000000000000000000000000003f"],
  [60, "0x0000000000000000000000000000000000000000000000000000000000000046"],
  [61, "0x0000000000000000000000000000000000000000000000000000000000000036"],
  [62, "0x0000000000000000000000000000000000000000000000000000000000000010"],
  [63, "0x00000000000000000000000000000000000000000000000000000000000000b0"],
  [64, "0x00000000000000000000000000000000000000000000000000000000000000fa"],
  [65, "0x0000000000000000000000000000000000000000000000000000000000000027"],
  [66, "0x00000000000000000000000000000000000000000000000000000000000000ef"],
  [67, "0x0000000000000000000000000000000000000000000000000000000000000000"],
  [68, "0x0000000000000000000000000000000000000000000000000000000000000001"],
  [69, "0x0000000000000000000000000000000000000000000000000000000000000002"],
  [70, "0x0000000000000000000000000000000000000000000000000000000000000003"],
  [71, "0x0000000000000000000000000000000000000000000000000000000000000004"],
  [72, "0x0000000000000000000000000000000000000000000000000000000000000005"],
  [73, "0x0000000000000000000000000000000000000000000000000000000000000006"],
  [74, "0x0000000000000000000000000000000000000000000000000000000000000007"],
  [75, "0x0000000000000000000000000000000000000000000000000000000000000008"],
  [76, "0x0000000000000000000000000000000000000000000000000000000000000009"],
]);

export const expectedWitnessMap = new Map(initialWitnessMap).set(
  77,
  "0x0000000000000000000000000000000000000000000000000000000000000001"
);
